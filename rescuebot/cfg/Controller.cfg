#! /usr/bin/env python
from __future__ import division
PACKAGE='rescuebot'
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("max_linear_speed", double_t, 0, "the maximum speed to go forward", 0.14, 0, 1)
gen.add("max_angular_speed", double_t, 0, "maximum turning speed for robot", .28, 0, 2)
gen.add("danger_zone_length", double_t, 0, "the length of the zone in front of the robot in which it avoids obstacles", 1.0, 0.05, 1.5)
gen.add("danger_zone_width", double_t, 0, "the width of the zone in which the robot avoids obstacles", 0.5, 0.05, 0.7)
gen.add("danger_points_multiplier", double_t, 0, "danger_points_multiplier", 1/50.0, 1/100.0, 1/10.0)
gen.add("wall_follow_distance", double_t, 0, "distance to maintain from the wall while following", .5, 0.02, 2.0)
gen.add("room_center_cutoff", double_t, 0, "standard deviation (meters) between distances to all laser scan data before we consider ourselves to be in the center of a room", 0.5, 0.1, 1.0)
gen.add("room_center_number_points", int_t, 0, "The number of points to average over when determining direction to go for room centering", 60,  1, 360)
gen.add("wall_follow_measurement_width", double_t, 0, "The width in dimensionless angles to average over when determining lead/trailing averages", 1/6,  1/360, 1/3)
gen.add("angle_wall_tolerance", double_t, 0, "when detecting closest point on wall", 0.2,  0, 1)
gen.add("approach_wall_constant", double_t, 0, "approach_wall_constant", 8,  1, 20)
gen.add("angle_offset_for_zero_speed", double_t, 0, "angle_offset_for_zero_speed", 1/8, 1/40, 1/2)
gen.add("wall_maintain_constant", double_t, 0, "wall_maintain_constant", 1, 0, 10)
gen.add("lost_robot_speed_multiplier", double_t, 0, "lost_robot_speed_multiplier", 0.5, 0, 1)
gen.add("goal_distance_to_goal_angle", double_t, 0, "goal_distance_to_goal_angle", 0.5, 0.05, 1)

# gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
# gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
# gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

exit(gen.generate(PACKAGE, 'rescuebot', 'Controller'))